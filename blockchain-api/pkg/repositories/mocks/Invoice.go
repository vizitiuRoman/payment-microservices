// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	invoice "github.com/vizitiuRoman/blockchain-api/pkg/repositories/postgres/invoice"

	testing "testing"
)

// Invoice is an autogenerated mock type for the Invoice type
type Invoice struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *Invoice) Create(_a0 *invoice.Invoice) (*invoice.Invoice, error) {
	ret := _m.Called(_a0)

	var r0 *invoice.Invoice
	if rf, ok := ret.Get(0).(func(*invoice.Invoice) *invoice.Invoice); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*invoice.Invoice)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*invoice.Invoice) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: id
func (_m *Invoice) Get(id string) (*invoice.Invoice, error) {
	ret := _m.Called(id)

	var r0 *invoice.Invoice
	if rf, ok := ret.Get(0).(func(string) *invoice.Invoice); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*invoice.Invoice)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewInvoice creates a new instance of Invoice. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoice(t testing.TB) *Invoice {
	mock := &Invoice{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
